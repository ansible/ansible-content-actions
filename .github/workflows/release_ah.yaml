---
name: Automation hub release
"on":
  workflow_call:
    inputs:
      ah_publish:
        description: Publish the collection on automation hub
        default: true
        type: boolean
      environment:
        description: The deployment environment
        required: true
        type: string
    secrets:
      ah_token:
        required: false
      ah_client_id:
        required: false
      ah_client_secret:
        required: false
jobs:
  release:
    runs-on: ubuntu-latest
    name: Automation Hub release
    environment: ${{ inputs.environment }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Ansible
        run: |
          python3 -m pip install --upgrade pip
          python3 -m pip install "ansible-core>=2.15"
      - name: Build the collection
        run: |
          ansible-galaxy collection build -v --force
      - name: Publish the collection on Automation Hub
        if: ${{ inputs.ah_publish }}
        run: |
          set -euo pipefail
          TARBALL=$(ls -1 ./*.tar.gz | head -n1)
          if [[ -n "${{ secrets.ah_token }}" ]]; then
            echo "Using ah_token for authentication"
            cat << EOF > ansible.cfg
            [galaxy]
            server_list = rh_automation_hub

            [galaxy_server.rh_automation_hub]
            url=https://cloud.redhat.com/api/automation-hub/
            auth_url=https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token
            token=${{ secrets.ah_token }}
            EOF

          elif [[ -n "${{ secrets.ah_client_id }}" && -n "${{ secrets.ah_client_secret }}" ]]; then
            echo "Using ah_client_id and ah_client_secret for authentication"
            cat << EOF > ansible.cfg
            [galaxy]
            server_list = automation_hub

            [galaxy_server.automation_hub]
            url=https://cloud.redhat.com/api/automation-hub/
            auth_url=https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token
            client_id=${{ secrets.ah_client_id }}
            client_secret=${{ secrets.ah_client_secret }}
            EOF

          else
            echo "Error: No valid Automation Hub credentials provided."
            echo "Please provide either 'ah_token' OR both 'ah_client_id' and 'ah_client_secret'."
            exit 1
          fi

          ansible-galaxy collection publish "${TARBALL}"
          rm -f ansible.cfg
